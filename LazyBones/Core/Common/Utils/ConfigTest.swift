import Foundation

/// –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
struct ConfigTest {
    
    /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    static func testAllConfigVariables() {
        print("=== –¢–ï–°–¢ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–û–ù–ù–´–• –ü–ï–†–ï–ú–ï–ù–ù–´–• ===")
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º Bundle Identifiers
        print("üì¶ Main Bundle ID: \(AppConfig.mainBundleId)")
        print("üì¶ Widget Bundle ID: \(AppConfig.widgetBundleId)")
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º App Groups
        print("üë• App Group: \(AppConfig.appGroup)")
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º Background Task Identifiers
        print("üîÑ Background Task ID: \(AppConfig.backgroundTaskIdentifier)")
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º Widget Identifiers
        print("üì± Widget Kind: \(AppConfig.widgetKind)")
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º UserDefaults
        let userDefaults = AppConfig.sharedUserDefaults
        print("üíæ UserDefaults Suite: \(AppConfig.appGroup)")
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å –∏ —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        let testKey = "configTestKey"
        let testValue = "testValue_\(Date().timeIntervalSince1970)"
        
        userDefaults.set(testValue, forKey: testKey)
        let readValue = userDefaults.string(forKey: testKey)
        
        print("‚úÖ UserDefaults Test: \(readValue == testValue ? "PASSED" : "FAILED")")
        print("   Written: \(testValue)")
        print("   Read: \(readValue ?? "nil")")
        
        // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        userDefaults.removeObject(forKey: testKey)
        
        print("=== –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù ===")
    }
    
    /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –º–µ–∂–¥—É –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –∏ –≤–∏–¥–∂–µ—Ç–æ–º
    static func testWidgetConfigCompatibility() {
        print("=== –¢–ï–°–¢ –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò –° –í–ò–î–ñ–ï–¢–û–ú ===")
        
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –º—ã –Ω–µ –º–æ–∂–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å WidgetConfig –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        // –ù–æ –º—ã –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –Ω–∞—à–∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã
        print("üì± Widget Kind –≤ AppConfig: \(AppConfig.widgetKind)")
        print("üë• App Group –≤ AppConfig: \(AppConfig.appGroup)")
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ widget kind —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É
        let expectedWidgetKind = "\(AppConfig.mainBundleId).LazyBonesWidget"
        print("üîç –û–∂–∏–¥–∞–µ–º—ã–π Widget Kind: \(expectedWidgetKind)")
        print("‚úÖ Widget Kind —Ñ–æ—Ä–º–∞—Ç: \(AppConfig.widgetKind == expectedWidgetKind ? "CORRECT" : "INCORRECT")")
        
        print("=== –¢–ï–°–¢ –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò –ó–ê–í–ï–†–®–ï–ù ===")
    }
} 